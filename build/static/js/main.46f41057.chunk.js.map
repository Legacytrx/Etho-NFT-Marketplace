{"version":3,"sources":["components/Content/MintNFT/MintForm.js","store/web3-context.js","store/collection-context.js","store/Web3Provider.js","store/CollectionProvider.js","store/marketplace-context.js","store/MarketplaceProvider.js","connection/web3.js","helpers/utils.js","components/Layout/Navbar.js","img/eth.png","components/Content/NFTCollection/NFTCollection.js","components/Layout/Spinner.js","img/logo2.PNG","components/Content/Main.js","App.js","index.js"],"names":["ipfs","require","create","host","port","protocol","MintForm","enteredName","setEnteredName","useState","descriptionIsValid","setDescriptionIsValid","enteredDescription","setEnteredDescription","nameIsValid","setNameIsValid","capturedFileBuffer","setCapturedFileBuffer","fileIsValid","setFileIsValid","web3Ctx","useContext","Web3Context","collectionCtx","CollectionContext","nameClass","descriptionClass","fileClass","onSubmit","event","preventDefault","async","fileAdded","add","console","error","metadata","title","type","properties","name","description","image","path","metadataAdded","JSON","stringify","contract","methods","safeMint","send","from","account","on","hash","setNftIsLoading","e","window","alert","mintNFT","className","placeholder","value","onChange","target","accept","file","files","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","result","React","createContext","networkId","loadAccount","loadNetworkId","totalSupply","collection","nftIsLoading","loadContract","loadTotalSupply","loadCollection","updateTotalSupply","updateCollection","updateOwner","defaultWeb3State","web3Reducer","state","action","Web3Provider","props","web3State","dispatchWeb3Action","useReducer","web3Context","web3","eth","getAccounts","net","getId","Provider","children","defaultCollectionState","collectionReducer","findIndex","NFT","id","parseInt","index","owner","newOwner","loading","CollectionProvider","CollectionState","dispatchCollectionAction","collectionContext","NFTCollection","deployedNetwork","Contract","abi","address","call","i","tokenURIs","response","fetch","ok","Error","json","ownerOf","img","tokenURI","MarketplaceContext","offerCount","offers","userFunds","mktIsLoading","loadOfferCount","loadOffers","updateOffer","addOffer","loadUserFunds","setMktIsLoading","defaultMarketplaceState","marketplaceReducer","filter","offer","offerId","user","price","fulfilled","cancelled","MarketplaceProvider","MarketplaceState","dispatchMarketplaceAction","marketplaceContext","NFTMarketplace","push","map","ethereum","Web3","formatPrice","Math","round","Navbar","fundsLoading","setFundsLoading","marketplaceCtx","etherscanUrl","events","ClaimFunds","log","onClick","claimFunds","class","role","href","rel","request","method","priceRefs","useRef","current","length","Array","fill","_","createRef","buyHandler","buyIndex","fillOffer","cancelHandler","cancelIndex","cancelOffer","key","toFixed","src","alt","substr","width","height","enteredPrice","utils","toWei","approve","options","receipt","makeOffer","makeOfferHandler","step","ref","Spinner","Main","logo","App","useEffect","nftDeployedNetwork","networks","nftContract","mktDeployedNetwork","mktContract","Transfer","returnValues","tokenId","to","OfferFilled","Offer","OfferCancelled","accounts","chainId","location","reload","loadBlockchainData","showNavbar","showContent","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46f41057.chunk.js","sourcesContent":["import { useState, useContext } from 'react';\r\n\r\nimport Web3Context from '../../../store/web3-context';\r\nimport CollectionContext from '../../../store/collection-context';\r\n\r\nconst ipfsClient = require('ipfs-http-client');\r\nconst ipfs = ipfsClient.create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n\r\nconst MintForm = () => {  \r\n  const [enteredName, setEnteredName] = useState('');\r\n  const [descriptionIsValid, setDescriptionIsValid] = useState(true);\r\n\r\n  const [enteredDescription, setEnteredDescription] = useState('');\r\n  const [nameIsValid, setNameIsValid] = useState(true);\r\n\r\n  const [capturedFileBuffer, setCapturedFileBuffer] = useState(null);\r\n  const [fileIsValid, setFileIsValid] = useState(true);\r\n\r\n  const web3Ctx = useContext(Web3Context);\r\n  const collectionCtx = useContext(CollectionContext);\r\n\r\n  const enteredNameHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const enteredDescriptionHandler = (event) => {\r\n    setEnteredDescription(event.target.value);\r\n  };\r\n  \r\n  const captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onloadend = () => {\r\n      setCapturedFileBuffer(Buffer(reader.result));     \r\n    }\r\n  };  \r\n  \r\n  const submissionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    enteredName ? setNameIsValid(true) : setNameIsValid(false);\r\n    enteredDescription ? setDescriptionIsValid(true) : setDescriptionIsValid(false);\r\n    capturedFileBuffer ? setFileIsValid(true) : setFileIsValid(false);\r\n\r\n    const formIsValid = enteredName && enteredDescription && capturedFileBuffer;\r\n\r\n    // Upload file to IPFS and push to the blockchain\r\n    const mintNFT = async() => {\r\n      // Add file to the IPFS\r\n      const fileAdded = await ipfs.add(capturedFileBuffer);\r\n      if(!fileAdded) {\r\n        console.error('Something went wrong when updloading the file');\r\n        return;\r\n      }\r\n\r\n      const metadata = {\r\n        title: \"Asset Metadata\",\r\n        type: \"object\",\r\n        properties: {\r\n          name: {\r\n            type: \"string\",\r\n            description: enteredName\r\n          },\r\n          description: {\r\n            type: \"string\",\r\n            description: enteredDescription\r\n          },\r\n          image: {\r\n            type: \"string\",\r\n            description: fileAdded.path\r\n          }\r\n        }\r\n      };\r\n\r\n      const metadataAdded = await ipfs.add(JSON.stringify(metadata));\r\n      if(!metadataAdded) {\r\n        console.error('Something went wrong when updloading the file');\r\n        return;\r\n      }\r\n      \r\n      collectionCtx.contract.methods.safeMint(metadataAdded.path).send({ from: web3Ctx.account })\r\n      .on('transactionHash', (hash) => {\r\n        collectionCtx.setNftIsLoading(true);\r\n      })\r\n      .on('error', (e) =>{\r\n        window.alert('Something went wrong when pushing to the blockchain');\r\n        collectionCtx.setNftIsLoading(false);  \r\n      })      \r\n    };\r\n\r\n    formIsValid && mintNFT();\r\n  };\r\n\r\n  const nameClass = nameIsValid? \"form-control\" : \"form-control is-invalid\";\r\n  const descriptionClass = descriptionIsValid? \"form-control\" : \"form-control is-invalid\";\r\n  const fileClass = fileIsValid? \"form-control\" : \"form-control is-invalid\";\r\n  \r\n  return(\r\n    <form onSubmit={submissionHandler}>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-2\">\r\n          <input\r\n            type='text'\r\n            className={`${nameClass} mb-1`}\r\n            placeholder='Name...'\r\n            value={enteredName}\r\n            onChange={enteredNameHandler}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input\r\n            type='text'\r\n            className={`${descriptionClass} mb-1`}\r\n            placeholder='Description...'\r\n            value={enteredDescription}\r\n            onChange={enteredDescriptionHandler}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <input\r\n            type='file'\r\n\t\t\taccept='.gif,.png,.jpg,.jpeg'\r\n            className={`${fileClass} mb-1`}\r\n            onChange={captureFile}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button type='submit' className='btn btn-lg btn-info text-white btn-block'>MINT</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MintForm;","import React from 'react';\r\n\r\nconst Web3Context = React.createContext({\r\n  account: null,\r\n  networkId: null,\r\n  loadAccount: () => {},\r\n  loadNetworkId: () => {}\r\n});\r\n\r\nexport default Web3Context;","import React from 'react';\r\n\r\nconst CollectionContext = React.createContext({\r\n  contract: null,\r\n  totalSupply: null,\r\n  collection: [],\r\n  nftIsLoading: true,\r\n  loadContract: () => {},\r\n  loadTotalSupply: () => {},\r\n  loadCollection: () => {},\r\n  updateTotalSupply: () => {},\r\n  updateCollection: () => {},\r\n  updateOwner: () => {},\r\n  setNftIsLoading: () => {}\r\n});\r\n\r\nexport default CollectionContext;","import { useReducer } from 'react';\r\n\r\nimport Web3Context from './web3-context';\r\n\r\nconst defaultWeb3State = {\r\n  account: null,\r\n  networkId: null\r\n};\r\n\r\nconst web3Reducer = (state, action) => {\r\n  if(action.type === 'ACCOUNT') {\r\n    return {\r\n      account: action.account,\r\n      networkId: state.networkId\r\n    };\r\n  } \r\n  \r\n  if(action.type === 'NETWORKID') {\r\n    return {\r\n      account: state.account,\r\n      networkId: action.networkId\r\n    };\r\n  }\r\n  \r\n  return defaultWeb3State;\r\n};\r\n\r\nconst Web3Provider = props => {\r\n  const [web3State, dispatchWeb3Action] = useReducer(web3Reducer, defaultWeb3State);\r\n  \r\n  const loadAccountHandler = async(web3) => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const account = accounts[0];\r\n    dispatchWeb3Action({type: 'ACCOUNT', account: account});\r\n    return account;\r\n  };\r\n\r\n  const loadNetworkIdHandler = async(web3) => {\r\n    const networkId = await web3.eth.net.getId();\r\n    dispatchWeb3Action({type: 'NETWORKID', networkId: networkId});\r\n    return networkId;   \r\n  };\r\n  \r\n  const web3Context = {\r\n    account:web3State.account,\r\n    networkId: web3State.networkId,\r\n    loadAccount: loadAccountHandler,\r\n    loadNetworkId: loadNetworkIdHandler\r\n  };\r\n  \r\n  return (\r\n    <Web3Context.Provider value={web3Context}>\r\n      {props.children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nexport default Web3Provider;","import { useReducer } from 'react';\r\n\r\nimport CollectionContext from './collection-context';\r\n\r\nconst defaultCollectionState = {\r\n  contract: null,\r\n  totalSupply: null,\r\n  collection: [],\r\n  nftIsLoading: true\r\n};\r\n\r\nconst collectionReducer = (state, action) => {\r\n  if(action.type === 'CONTRACT') {    \r\n    return {\r\n      contract: action.contract,\r\n      totalSupply: state.totalSupply,\r\n      collection: state.collection,\r\n      nftIsLoading: state.nftIsLoading\r\n    };\r\n  } \r\n  \r\n  if(action.type === 'LOADSUPPLY') {\r\n    return {\r\n      contract: state.contract,\r\n      totalSupply: action.totalSupply,\r\n      collection: state.collection,\r\n      nftIsLoading: state.nftIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADCOLLECTION') {    \r\n    return {\r\n      contract: state.contract,\r\n      totalSupply: state.totalSupply,\r\n      collection: action.collection,\r\n      nftIsLoading: state.nftIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'UPDATECOLLECTION') {    \r\n    const index = state.collection.findIndex(NFT => NFT.id === parseInt(action.NFT.id));\r\n    let collection = [];\r\n\r\n    if(index === -1) {\r\n      collection = [action.NFT, ...state.collection];\r\n    } else {\r\n      collection = [...state.collection];\r\n    }    \r\n\r\n    return {\r\n      contract: state.contract,\r\n      totalSupply: state.totalSupply,\r\n      collection: collection,\r\n      nftIsLoading: state.nftIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'UPDATEOWNER') {\r\n    const index = state.collection.findIndex(NFT => NFT.id === parseInt(action.id));\r\n    let collection = [...state.collection];\r\n    collection[index].owner = action.newOwner;\r\n\r\n    return {\r\n      contract: state.contract,\r\n      totalSupply: state.totalSupply,\r\n      collection: collection,\r\n      nftIsLoading: state.nftIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADING') {    \r\n    return {\r\n      contract: state.contract,\r\n      totalSupply: state.totalSupply,\r\n      collection: state.collection,\r\n      nftIsLoading: action.loading\r\n    };\r\n  }\r\n  \r\n  return defaultCollectionState;\r\n};\r\n\r\nconst CollectionProvider = props => {\r\n  const [CollectionState, dispatchCollectionAction] = useReducer(collectionReducer, defaultCollectionState);\r\n  \r\n  const loadContractHandler = (web3, NFTCollection, deployedNetwork) => {\r\n    const contract = deployedNetwork ? new web3.eth.Contract(NFTCollection.abi, deployedNetwork.address): '';\r\n    dispatchCollectionAction({type: 'CONTRACT', contract: contract}); \r\n    return contract;\r\n  };\r\n\r\n  const loadTotalSupplyHandler = async(contract) => {\r\n    const totalSupply = await contract.methods.totalSupply().call();\r\n    dispatchCollectionAction({type: 'LOADSUPPLY', totalSupply: totalSupply});\r\n    return totalSupply;\r\n  };\r\n\r\n  const loadCollectionHandler = async(contract, totalSupply) => {\r\n    let collection = [];\r\n\r\n    for(let i = 0; i < totalSupply; i++) {\r\n      const hash = await contract.methods.tokenURIs(i).call();\r\n      try {\r\n        const response = await fetch(`https://ipfs.infura.io/ipfs/${hash}?clear`);\r\n        if(!response.ok) {\r\n          throw new Error('Something went wrong');\r\n        }\r\n\r\n        const metadata = await response.json();\r\n        const owner = await contract.methods.ownerOf(i + 1).call();\r\n\r\n        collection = [{\r\n          id: i + 1,\r\n          title: metadata.properties.name.description,\r\n          img: metadata.properties.image.description,\r\n          owner: owner\r\n        }, ...collection];\r\n      }catch {\r\n        console.error('Something went wrong');\r\n      }\r\n    }\r\n    dispatchCollectionAction({type: 'LOADCOLLECTION', collection: collection});     \r\n  };\r\n\r\n  const updateCollectionHandler = async(contract, id, owner) => {\r\n    let NFT;\r\n    const hash = await contract.methods.tokenURI(id).call();\r\n    try {\r\n      const response = await fetch(`https://ipfs.infura.io/ipfs/${hash}?clear`);\r\n      if(!response.ok) {\r\n        throw new Error('Something went wrong');      }\r\n\r\n      const metadata = await response.json();      \r\n\r\n      NFT = {\r\n        id: parseInt(id),\r\n        title: metadata.properties.name.description,\r\n        img: metadata.properties.image.description,\r\n        owner: owner\r\n      };\r\n    }catch {\r\n      console.error('Something went wrong');\r\n    }\r\n    dispatchCollectionAction({type: 'UPDATECOLLECTION', NFT: NFT});\r\n  };\r\n\r\n  const updateOwnerHandler = (id, newOwner) => {\r\n    dispatchCollectionAction({type: 'UPDATEOWNER', id: id, newOwner: newOwner});\r\n  };\r\n\r\n  const setNftIsLoadingHandler = (loading) => {\r\n    dispatchCollectionAction({type: 'LOADING', loading: loading});\r\n  };\r\n\r\n  const collectionContext = {\r\n    contract: CollectionState.contract,\r\n    totalSupply: CollectionState.totalSupply,\r\n    collection: CollectionState.collection,\r\n    nftIsLoading:CollectionState.nftIsLoading,\r\n    loadContract: loadContractHandler,\r\n    loadTotalSupply: loadTotalSupplyHandler,\r\n    loadCollection: loadCollectionHandler,\r\n    updateCollection: updateCollectionHandler,\r\n    updateOwner: updateOwnerHandler,\r\n    setNftIsLoading: setNftIsLoadingHandler\r\n  };\r\n  \r\n  return (\r\n    <CollectionContext.Provider value={collectionContext}>\r\n      {props.children}\r\n    </CollectionContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CollectionProvider;","import React from 'react';\r\n\r\nconst MarketplaceContext = React.createContext({\r\n  contract: null,\r\n  offerCount: null,\r\n  offers: [],\r\n  userFunds: null,\r\n  mktIsLoading: true,\r\n  loadContract: () => {},\r\n  loadOfferCount: () => {},\r\n  loadOffers: () => {},\r\n  updateOffer: () => {},\r\n  addOffer: () => {},\r\n  loadUserFunds: () => {},\r\n  setMktIsLoading: () => {}\r\n});\r\n\r\nexport default MarketplaceContext;","import { useReducer } from 'react';\r\n\r\nimport MarketplaceContext from './marketplace-context';\r\n\r\nconst defaultMarketplaceState = {\r\n  contract: null,\r\n  offerCount: null,\r\n  offers: [],\r\n  userFunds: null,\r\n  mktIsLoading: true\r\n};\r\n\r\nconst marketplaceReducer = (state, action) => {\r\n  if(action.type === 'CONTRACT') {    \r\n    return {\r\n      contract: action.contract,\r\n      offerCount: state.offerCount,\r\n      offers: state.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADOFFERCOUNT') {    \r\n    return {\r\n      contract: state.contract,\r\n      offerCount: action.offerCount,\r\n      offers: state.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADOFFERS') {    \r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: action.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'UPDATEOFFER') {    \r\n    const offers = state.offers.filter(offer => offer.offerId !== parseInt(action.offerId));\r\n\r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'ADDOFFER') {    \r\n    const index = state.offers.findIndex(offer => offer.offerId === parseInt(action.offer.offerId));\r\n    let offers = [];\r\n\r\n    if(index === -1) {\r\n      offers = [...state.offers, {\r\n        offerId: parseInt(action.offer.offerId),\r\n        id: parseInt(action.offer.id),\r\n        user: (action.offer.user),\r\n        price: parseInt(action.offer.price),\r\n        fulfilled: false,\r\n        cancelled: false\r\n      }];\r\n    } else {\r\n      offers = [...state.offers];\r\n    }    \r\n\r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADFUNDS') {\r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: state.offers,\r\n      userFunds: action.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADING') {    \r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: state.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: action.loading\r\n    };\r\n  }\r\n  \r\n  return defaultMarketplaceState;\r\n};\r\n\r\nconst MarketplaceProvider = props => {\r\n  const [MarketplaceState, dispatchMarketplaceAction] = useReducer(marketplaceReducer, defaultMarketplaceState);\r\n  \r\n  const loadContractHandler = (web3, NFTMarketplace, deployedNetwork) => {\r\n    const contract = deployedNetwork ? new web3.eth.Contract(NFTMarketplace.abi, deployedNetwork.address): '';\r\n    dispatchMarketplaceAction({type: 'CONTRACT', contract: contract}); \r\n    return contract;\r\n  };\r\n\r\n  const loadOfferCountHandler = async(contract) => {\r\n    const offerCount = await contract.methods.offerCount().call();\r\n    dispatchMarketplaceAction({type: 'LOADOFFERCOUNT', offerCount: offerCount});\r\n    return offerCount;\r\n  };\r\n\r\n  const loadOffersHandler = async(contract, offerCount) => {\r\n    let offers = [];\r\n    for(let i = 0; i < offerCount; i++) {\r\n      const offer = await contract.methods.offers(i + 1).call();\r\n      offers.push(offer);\r\n    }\r\n    offers = offers\r\n    .map(offer => {\r\n      offer.offerId = parseInt(offer.offerId);\r\n      offer.id = parseInt(offer.id);\r\n      offer.price = parseInt(offer.price);\r\n      return offer;\r\n    })\r\n    .filter(offer => offer.fulfilled === false && offer.cancelled === false); \r\n    dispatchMarketplaceAction({type: 'LOADOFFERS', offers: offers});\r\n  };\r\n\r\n  const updateOfferHandler = (offerId) => {\r\n    dispatchMarketplaceAction({type: 'UPDATEOFFER', offerId: offerId});   \r\n  };\r\n\r\n  const addOfferHandler = (offer) => {\r\n    dispatchMarketplaceAction({type: 'ADDOFFER', offer: offer});   \r\n  };\r\n\r\n  const loadUserFundsHandler = async(contract, account) => {\r\n    const userFunds = await contract.methods.userFunds(account).call();\r\n    dispatchMarketplaceAction({type: 'LOADFUNDS', userFunds: userFunds});\r\n    return userFunds;\r\n  };\r\n\r\n  const setMktIsLoadingHandler = (loading) => {\r\n    dispatchMarketplaceAction({type: 'LOADING', loading: loading});\r\n  };\r\n\r\n  const marketplaceContext = {\r\n    contract: MarketplaceState.contract,\r\n    offerCount: MarketplaceState.offerCount,\r\n    offers: MarketplaceState.offers,\r\n    userFunds: MarketplaceState.userFunds,\r\n    mktIsLoading: MarketplaceState.mktIsLoading,\r\n    loadContract: loadContractHandler,\r\n    loadOfferCount: loadOfferCountHandler,\r\n    loadOffers: loadOffersHandler,\r\n    updateOffer: updateOfferHandler,\r\n    addOffer: addOfferHandler,\r\n    loadUserFunds: loadUserFundsHandler,\r\n    setMktIsLoading: setMktIsLoadingHandler\r\n  };\r\n  \r\n  return (\r\n    <MarketplaceContext.Provider value={marketplaceContext}>\r\n      {props.children}\r\n    </MarketplaceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MarketplaceProvider;","import Web3 from 'web3';\r\n\r\n// Web 3 connection\r\nconst web3 = window.ethereum ? new Web3(window.ethereum) : null; \r\n\r\nexport default web3;","export const DECIMALS = (10**18);\r\n\r\nexport const ether = wei => wei / DECIMALS;\r\n\r\nexport const formatPrice = (price) => {\r\n  const precision = 100; // Use 2 decimal places\r\n\r\n  price = ether(price);\r\n  price = Math.round(price * precision) / precision;\r\n   \r\n  return price;\r\n};","import { useContext, useState } from 'react';\r\n\r\nimport Web3Context from '../../store/web3-context';\r\nimport MarketplaceContext from '../../store/marketplace-context';\r\nimport web3 from '../../connection/web3';\r\nimport { formatPrice } from '../../helpers/utils';\r\n\r\nconst Navbar = () => {\r\n  const [fundsLoading, setFundsLoading] = useState(false);\r\n  \r\n  const web3Ctx = useContext(Web3Context);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n  \r\n  const connectWalletHandler = async() => {\r\n    try {\r\n      // Request account access\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    } catch(error) {\r\n      console.error(error);\r\n    }\r\n\r\n    // Load accounts\r\n    web3Ctx.loadAccount(web3);\r\n  };\r\n\r\n  const claimFundsHandler = () => {\r\n    marketplaceCtx.contract.methods.claimFunds().send({ from: web3Ctx.account })\r\n    .on('transactionHash', (hash) => {\r\n      setFundsLoading(true);\r\n    })\r\n    .on('error', (error) => {\r\n      window.alert('Something went wrong when pushing to the etho blockchain');\r\n      setFundsLoading(false);\r\n    });\r\n  };\r\n\r\n  // Event ClaimFunds subscription \r\n  marketplaceCtx.contract.events.ClaimFunds()\r\n  .on('data', (event) => {\r\n    marketplaceCtx.loadUserFunds(marketplaceCtx.contract, web3Ctx.account);\r\n    setFundsLoading(false);\r\n  })\r\n  .on('error', (error) => {\r\n    console.log(error);\r\n  });\r\n\r\n  let etherscanUrl;\r\n\r\n  if(web3Ctx.networkId === 3) {\r\n    etherscanUrl = 'https://ropsten.etherscan.io'\r\n  } else if(web3Ctx.networkId === 4) {\r\n    etherscanUrl = 'https://rinkeby.etherscan.io'\r\n  } else if(web3Ctx.networkId === 5) {\r\n    etherscanUrl = 'https://goerli.etherscan.io'\r\n  } else {\r\n    etherscanUrl = 'https://etherscan.io'\r\n  }\r\n  \r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-white p-0\">      \r\n      <ul className=\"navbar-nav ms-auto\">\r\n        <li className=\"nav-item\">\r\n          {marketplaceCtx.userFunds > 0 && !fundsLoading &&\r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-info btn-block navbar-btn text-white\" \r\n              onClick={claimFundsHandler}\r\n            >          \r\n              {`YOU SOLD AN ITEM! CLAIM ${formatPrice(marketplaceCtx.userFunds)} ETHO`}\r\n            </button>}\r\n          {fundsLoading &&\r\n            <div class=\"d-flex justify-content-center text-info\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\"></span>\r\n              </div>\r\n          </div>}          \r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {web3Ctx.account && \r\n            <a \r\n              className=\"nav-link small\" \r\n              href={`https://explorer.ethoprotocol.com/address/${web3Ctx.account}`}\r\n              target=\"blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {web3Ctx.account}\r\n            </a>}\r\n          {!web3Ctx.account && \r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-info text-white\" \r\n              onClick={connectWalletHandler} \r\n            > \r\n              Connect your wallet\r\n            </button>}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );  \r\n};\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/eth.51ee5a24.png\";","import { useContext, useRef, createRef } from 'react';\r\n\r\nimport web3 from '../../../connection/web3';\r\nimport Web3Context from '../../../store/web3-context';\r\nimport CollectionContext from '../../../store/collection-context';\r\nimport MarketplaceContext from '../../../store/marketplace-context';\r\nimport { formatPrice } from '../../../helpers/utils';\r\nimport eth from '../../../img/eth.png';\r\n\r\nconst NFTCollection = () => {\r\n  const web3Ctx = useContext(Web3Context);\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n\r\n  const priceRefs = useRef([]);\r\n  if (priceRefs.current.length !== collectionCtx.collection.length) {\r\n    priceRefs.current = Array(collectionCtx.collection.length).fill().map((_, i) => priceRefs.current[i] || createRef());\r\n  }\r\n  \r\n  const makeOfferHandler = (event, id, key) => {\r\n    event.preventDefault();\r\n\r\n    const enteredPrice = web3.utils.toWei(priceRefs.current[key].current.value, 'ether');\r\n\r\n    collectionCtx.contract.methods.approve(marketplaceCtx.contract.options.address, id).send({ from: web3Ctx.account })\r\n    .on('transactionHash', (hash) => {\r\n      marketplaceCtx.setMktIsLoading(true);\r\n    })\r\n    .on('receipt', (receipt) => {      \r\n      marketplaceCtx.contract.methods.makeOffer(id, enteredPrice).send({ from: web3Ctx.account })\r\n      .on('error', (error) => {\r\n        window.alert('Something went wrong when pushing to the blockchain');\r\n        marketplaceCtx.setMktIsLoading(false);\r\n      }); \r\n    });\r\n  };\r\n  \r\n  const buyHandler = (event) => {    \r\n    const buyIndex = parseInt(event.target.value);      \r\n    marketplaceCtx.contract.methods.fillOffer(marketplaceCtx.offers[buyIndex].offerId).send({ from: web3Ctx.account, value: marketplaceCtx.offers[buyIndex].price })\r\n    .on('transactionHash', (hash) => {\r\n      marketplaceCtx.setMktIsLoading(true);\r\n    })\r\n    .on('error', (error) => {\r\n      window.alert('Something went wrong when pushing to the blockchain');\r\n      marketplaceCtx.setMktIsLoading(false);\r\n    });            \r\n  };\r\n\r\n  const cancelHandler = (event) => {    \r\n    const cancelIndex = parseInt(event.target.value);\r\n    marketplaceCtx.contract.methods.cancelOffer(marketplaceCtx.offers[cancelIndex].offerId).send({ from: web3Ctx.account })\r\n    .on('transactionHash', (hash) => {\r\n      marketplaceCtx.setMktIsLoading(true);\r\n    })\r\n    .on('error', (error) => {\r\n      window.alert('Something went wrong when pushing to the blockchain');\r\n      marketplaceCtx.setMktIsLoading(false);\r\n    });    \r\n  };\r\n \r\n  return(\r\n    <div className=\"justify-content-center row text-center d-flex align-items-end\">\r\n      {collectionCtx.collection.map((NFT, key) => {\r\n        const index = marketplaceCtx.offers ? marketplaceCtx.offers.findIndex(offer => offer.id === NFT.id) : -1;\r\n        const owner = index === -1 ? NFT.owner : marketplaceCtx.offers[index].user;\r\n        const price = index !== -1 ? formatPrice(marketplaceCtx.offers[index].price).toFixed(2) : null;\r\n\r\n        return(\r\n          <div key={key} className=\"col-md-2 m-3 pb-3 card border-info\">\r\n            <div className={\"card-body\"}>       \r\n              <h5 className=\"card-title\">{NFT.title}</h5>\r\n            </div>\r\n            <img src={`https://ipfs.infura.io/ipfs/${NFT.img}`} className=\"card-img-bottom\" alt={`NFT ${key}`} />                         \r\n            <p className=\"fw-light fs-6\">{`${owner.substr(0,7)}...${owner.substr(owner.length - 7)}`}</p>\r\n            {index !== -1 ?\r\n              owner !== web3Ctx.account ?\r\n                <div className=\"row\">\r\n                  <div className=\"d-grid gap-2 col-5 mx-auto\">\r\n                    <button onClick={buyHandler} value={index} className=\"btn btn-success\">BUY</button>\r\n                  </div>\r\n                  <div className=\"col-7 d-flex justify-content-end\">\r\n                    <img src={eth} width=\"25\" height=\"25\" className=\"align-center float-start\" alt=\"price icon\"></img>                \r\n                    <p className=\"text-start\"><b>{`${price}`}</b></p>\r\n                  </div>\r\n                </div> :\r\n                <div className=\"row\">\r\n                  <div className=\"d-grid gap-2 col-5 mx-auto\">\r\n                    <button onClick={cancelHandler} value={index} className=\"btn btn-danger\">CANCEL</button>\r\n                  </div>\r\n                  <div className=\"col-7 d-flex justify-content-end\">\r\n                    <img src={eth} width=\"25\" height=\"25\" className=\"align-center float-start\" alt=\"price icon\"></img>                \r\n                    <p className=\"text-start\"><b>{`${price}`}</b></p>\r\n                  </div>\r\n                </div> :\r\n              owner === web3Ctx.account ?              \r\n                <form className=\"row g-2\" onSubmit={(e) => makeOfferHandler(e, NFT.id, key)}>                \r\n                  <div className=\"col-5 d-grid gap-2\">\r\n                    <button type=\"submit\" className=\"btn btn-secondary\">PUT ON SALE</button>\r\n                  </div>\r\n                  <div className=\"col-7\">\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      placeholder=\"ETHO...\"\r\n                      className=\"form-control\"\r\n                      ref={priceRefs.current[key]}\r\n                    />\r\n                  </div>                                  \r\n                </form> :\r\n                <p><br/></p>}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NFTCollection;","const Spinner = () => {\r\n  return(\r\n    <div className=\"text-center mt-5\">\r\n      <div className=\"spinner-border text-info text-center\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/logo2.db95965d.PNG\";","import { useContext  } from 'react';\r\n\r\nimport MintForm from './MintNFT/MintForm';\r\nimport NFTCollection from './NFTCollection/NFTCollection';\r\nimport CollectionContext from '../../store/collection-context';\r\nimport MarketplaceContext from '../../store/marketplace-context';\r\nimport Spinner from '../Layout/Spinner';\r\nimport logo from '../../img/logo2.PNG'\r\n\r\nconst Main = () => {\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n  \r\n  return(\r\n    <div className=\"container-fluid mt-2\">\r\n      <div className=\"row\">\r\n        <main role=\"main\" className=\"col-lg-12 justify-content-center text-center\">\r\n          <div className=\"content mr-auto ml-auto\">\r\n            <img src={logo} alt=\"logo\" width=\"500\" height=\"140\" className=\"mb-2\"/>\r\n            {!collectionCtx.nftIsLoading && <MintForm />}\r\n            {collectionCtx.nftIsLoading && <Spinner />}\r\n          </div>\r\n        </main>\r\n      </div>\r\n      <hr/>\r\n      {!marketplaceCtx.mktIsLoading && <NFTCollection />}\r\n      {marketplaceCtx.mktIsLoading && <Spinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","import React, { useContext, useEffect } from 'react';\r\n\r\nimport web3 from './connection/web3';\r\nimport Navbar from './components/Layout/Navbar';\r\nimport Main from './components/Content/Main';\r\nimport Web3Context from './store/web3-context';\r\nimport CollectionContext from './store/collection-context';\r\nimport MarketplaceContext from './store/marketplace-context'\r\nimport NFTCollection from './abis/NFTCollection.json';\r\nimport NFTMarketplace from './abis/NFTMarketplace.json';\r\n\r\nconst App = () => {\r\n  const web3Ctx = useContext(Web3Context);\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n  \r\n  useEffect(() => {\r\n    // Check if the user has Metamask active\r\n    if(!web3) {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n      return;\r\n    }\r\n    \r\n    // Function to fetch all the blockchain data\r\n    const loadBlockchainData = async() => {\r\n      // Request accounts acccess if needed\r\n      try {\r\n        await window.ethereum.request({ method: 'eth_requestAccounts' });  \r\n      } catch(error) {\r\n        console.error(error);\r\n      }\r\n      \r\n      // Load account\r\n      const account = await web3Ctx.loadAccount(web3);\r\n\r\n      // Load Network ID\r\n      const networkId = await web3Ctx.loadNetworkId(web3);\r\n\r\n      // Load Contracts      \r\n      const nftDeployedNetwork = NFTCollection.networks[networkId];\r\n      const nftContract = collectionCtx.loadContract(web3, NFTCollection, nftDeployedNetwork);\r\n\r\n      const mktDeployedNetwork = NFTMarketplace.networks[networkId];\r\n      const mktContract = marketplaceCtx.loadContract(web3, NFTMarketplace, mktDeployedNetwork);\r\n\r\n      if(nftContract) {        \r\n        // Load total Supply\r\n        const totalSupply = await collectionCtx.loadTotalSupply(nftContract);\r\n        \r\n        // Load Collection\r\n        collectionCtx.loadCollection(nftContract, totalSupply);       \r\n\r\n        // Event subscription\r\n        nftContract.events.Transfer()\r\n        .on('data', (event) => {\r\n          collectionCtx.updateCollection(nftContract, event.returnValues.tokenId, event.returnValues.to);\r\n          collectionCtx.setNftIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n        \r\n      } else {\r\n        window.alert('NFTCollection contract not deployed to detected network.')\r\n      }\r\n\r\n      if(mktContract) {\r\n        // Load offer count\r\n        const offerCount = await marketplaceCtx.loadOfferCount(mktContract);\r\n        \r\n        // Load offers\r\n        marketplaceCtx.loadOffers(mktContract, offerCount); \r\n        \r\n        // Load User Funds\r\n        account && marketplaceCtx.loadUserFunds(mktContract, account);\r\n\r\n        // Event OfferFilled subscription \r\n        mktContract.events.OfferFilled()\r\n        .on('data', (event) => {\r\n          marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n          collectionCtx.updateOwner(event.returnValues.id, event.returnValues.newOwner);\r\n          marketplaceCtx.setMktIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n\r\n        // Event Offer subscription \r\n        mktContract.events.Offer()\r\n        .on('data', (event) => {\r\n          marketplaceCtx.addOffer(event.returnValues);\r\n          marketplaceCtx.setMktIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n\r\n        // Event offerCancelled subscription \r\n        mktContract.events.OfferCancelled()\r\n        .on('data', (event) => {\r\n          marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n          collectionCtx.updateOwner(event.returnValues.id, event.returnValues.owner);\r\n          marketplaceCtx.setMktIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n        \r\n      } else {\r\n        window.alert('ETHONFTMarketplace contract not deployed to detected network.')\r\n      }\r\n\r\n      collectionCtx.setNftIsLoading(false);\r\n      marketplaceCtx.setMktIsLoading(false);\r\n\r\n      // Metamask Event Subscription - Account changed\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        web3Ctx.loadAccount(web3);\r\n        accounts[0] && marketplaceCtx.loadUserFunds(mktContract, accounts[0]);\r\n      });\r\n\r\n      // Metamask Event Subscription - Network changed\r\n      window.ethereum.on('chainChanged', (chainId) => {\r\n        window.location.reload();\r\n      });\r\n    };\r\n    \r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  const showNavbar = web3 && collectionCtx.contract && marketplaceCtx.contract;\r\n  const showContent = web3 && collectionCtx.contract && marketplaceCtx.contract && web3Ctx.account;\r\n  \r\n  return(\r\n    <React.Fragment>\r\n      {showNavbar && <Navbar />}\r\n      {showContent && <Main />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Web3Provider from './store/Web3Provider';\r\nimport CollectionProvider from './store/CollectionProvider';\r\nimport MarketplaceProvider from './store/MarketplaceProvider';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Web3Provider>\r\n    <CollectionProvider>\r\n      <MarketplaceProvider>\r\n        <App />\r\n      </MarketplaceProvider>\r\n    </CollectionProvider>\r\n  </Web3Provider>, \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}